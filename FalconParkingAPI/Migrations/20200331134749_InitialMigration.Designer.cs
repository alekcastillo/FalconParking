// <auto-generated />
using FalconParking.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FalconParkingAPI.Migrations
{
    [DbContext(typeof(FalconParkingDbContext))]
    [Migration("20200331134749_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FalconParking.Domain.Views.ParkingLotView", b =>
                {
                    b.Property<int>("AggregateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AvailableSlotsCount")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TotalSlotsCount")
                        .HasColumnType("integer");

                    b.HasKey("AggregateId");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("FalconParking.Domain.Views.ParkingSlotView", b =>
                {
                    b.Property<int>("AggregateId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("AggregateId", "Id");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("FalconParking.Domain.Views.ParkingSlotView", b =>
                {
                    b.HasOne("FalconParking.Domain.Views.ParkingLotView", null)
                        .WithMany("Slots")
                        .HasForeignKey("AggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
